// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VetClinicServer.Models;

#nullable disable

namespace VetClinicServer.Migrations
{
    [DbContext(typeof(VetClinicContext))]
    [Migration("20231114142508_SeedMedicationData")]
    partial class SeedMedicationData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Ukrainian_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedicationPrescription", b =>
                {
                    b.Property<int>("MedicationsMedicationId")
                        .HasColumnType("int");

                    b.Property<int>("PrescriptionsPrescriptionId")
                        .HasColumnType("int");

                    b.HasKey("MedicationsMedicationId", "PrescriptionsPrescriptionId");

                    b.HasIndex("PrescriptionsPrescriptionId");

                    b.ToTable("MedicationPrescription");
                });

            modelBuilder.Entity("VetClinicServer.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("appointmentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctorId");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patientId");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("appointmentType");

                    b.HasKey("AppointmentId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            Date = new DateTime(2024, 7, 6, 18, 18, 0, 785, DateTimeKind.Unspecified).AddTicks(3976),
                            DoctorId = 2,
                            PatientId = 22,
                            Type = 1
                        },
                        new
                        {
                            AppointmentId = 2,
                            Date = new DateTime(2024, 6, 18, 22, 19, 40, 665, DateTimeKind.Unspecified).AddTicks(9596),
                            DoctorId = 14,
                            PatientId = 1,
                            Type = 4
                        },
                        new
                        {
                            AppointmentId = 3,
                            Date = new DateTime(2024, 5, 30, 16, 25, 21, 835, DateTimeKind.Unspecified).AddTicks(9761),
                            DoctorId = 14,
                            PatientId = 31,
                            Type = 8
                        },
                        new
                        {
                            AppointmentId = 4,
                            Date = new DateTime(2024, 3, 11, 4, 37, 34, 133, DateTimeKind.Unspecified).AddTicks(9758),
                            DoctorId = 6,
                            PatientId = 12,
                            Type = 7
                        },
                        new
                        {
                            AppointmentId = 5,
                            Date = new DateTime(2024, 9, 14, 8, 57, 53, 154, DateTimeKind.Unspecified).AddTicks(3542),
                            DoctorId = 4,
                            PatientId = 31,
                            Type = 4
                        },
                        new
                        {
                            AppointmentId = 6,
                            Date = new DateTime(2024, 3, 24, 23, 30, 37, 31, DateTimeKind.Unspecified).AddTicks(1267),
                            DoctorId = 13,
                            PatientId = 5,
                            Type = 6
                        });
                });

            modelBuilder.Entity("VetClinicServer.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("billId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctorId");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patientId");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("paymentDate");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("statusId");

                    b.HasKey("BillId")
                        .HasName("PK_Invoices_1");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.HasIndex("StatusId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("VetClinicServer.Models.BillStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("statusId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("statusName")
                        .IsFixedLength();

                    b.HasKey("StatusId");

                    b.ToTable("BillStatus");
                });

            modelBuilder.Entity("VetClinicServer.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("clientId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("postalCode");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Address = "859 Ayden Causeway, South Leila, Saudi Arabia",
                            Email = "Jaquelin_OConner81@yahoo.com",
                            FirstName = "Brooks",
                            LastName = "Schneider",
                            PhoneNumber = "484-768-4978",
                            PostalCode = "44471-5110"
                        },
                        new
                        {
                            ClientId = 2,
                            Address = "753 Lowe Tunnel, Port Artton, Nicaragua",
                            Email = "Rhiannon.OConner18@gmail.com",
                            FirstName = "Haskell",
                            LastName = "Hodkiewicz",
                            PhoneNumber = "861-938-6044",
                            PostalCode = "73635"
                        },
                        new
                        {
                            ClientId = 3,
                            Address = "120 West Mission, Larissaton, France",
                            Email = "Saige_Conn@hotmail.com",
                            FirstName = "Niko",
                            LastName = "Kuhn",
                            PhoneNumber = "523-833-8021",
                            PostalCode = "79139"
                        },
                        new
                        {
                            ClientId = 4,
                            Address = "69457 Rosa Fields, Ignaciochester, Virgin Islands, British",
                            Email = "Hadley50@hotmail.com",
                            FirstName = "Maxime",
                            LastName = "Rath",
                            PhoneNumber = "920-227-6530",
                            PostalCode = "04359"
                        },
                        new
                        {
                            ClientId = 5,
                            Address = "231 Elmira Vista, Brainport, Philippines",
                            Email = "Kira_Klein@hotmail.com",
                            FirstName = "Guiseppe",
                            LastName = "Lueilwitz",
                            PhoneNumber = "963-984-9011",
                            PostalCode = "17977-1006"
                        },
                        new
                        {
                            ClientId = 6,
                            Address = "1295 Mercedes Key, West Helen, Kenya",
                            Email = "Dock65@yahoo.com",
                            FirstName = "Cornell",
                            LastName = "Corwin",
                            PhoneNumber = "637-407-3001",
                            PostalCode = "79667-6671"
                        },
                        new
                        {
                            ClientId = 7,
                            Address = "32923 Modesto Fort, Wiltonmouth, Bosnia and Herzegovina",
                            Email = "Laverna.Bogisich@yahoo.com",
                            FirstName = "Zackary",
                            LastName = "Hammes",
                            PhoneNumber = "461-267-2249",
                            PostalCode = "66501-9360"
                        },
                        new
                        {
                            ClientId = 8,
                            Address = "151 Luella Village, Lake Simeon, Montenegro",
                            Email = "Sabina37@hotmail.com",
                            FirstName = "Icie",
                            LastName = "Reilly",
                            PhoneNumber = "470-251-3146",
                            PostalCode = "90238-5160"
                        },
                        new
                        {
                            ClientId = 9,
                            Address = "134 Heathcote Manor, Kshlerinmouth, Djibouti",
                            Email = "Zelma.Larson91@gmail.com",
                            FirstName = "Mandy",
                            LastName = "Lubowitz",
                            PhoneNumber = "423-955-4019",
                            PostalCode = "80983-1545"
                        },
                        new
                        {
                            ClientId = 10,
                            Address = "52931 MacGyver Island, Stanleyside, Luxembourg",
                            Email = "Amaya_Langworth96@gmail.com",
                            FirstName = "Lela",
                            LastName = "Carter",
                            PhoneNumber = "762-769-6614",
                            PostalCode = "78027-4748"
                        },
                        new
                        {
                            ClientId = 11,
                            Address = "3051 Sabryna Square, South Annabell, Falkland Islands (Malvinas)",
                            Email = "Krystal.Tromp90@yahoo.com",
                            FirstName = "Ubaldo",
                            LastName = "Predovic",
                            PhoneNumber = "624-366-7978",
                            PostalCode = "72565-0585"
                        },
                        new
                        {
                            ClientId = 12,
                            Address = "379 Alejandrin Mission, New Jack, Cook Islands",
                            Email = "Dayne3@gmail.com",
                            FirstName = "Anne",
                            LastName = "Ferry",
                            PhoneNumber = "251-860-4971",
                            PostalCode = "76022"
                        },
                        new
                        {
                            ClientId = 13,
                            Address = "7094 Herzog Loaf, South Elvie, Kenya",
                            Email = "Milo16@gmail.com",
                            FirstName = "Fiona",
                            LastName = "Moore",
                            PhoneNumber = "741-649-6576",
                            PostalCode = "42803-9411"
                        },
                        new
                        {
                            ClientId = 14,
                            Address = "496 Philip Port, Hazleburgh, Sudan",
                            Email = "Davin.Heaney@gmail.com",
                            FirstName = "Kole",
                            LastName = "Erdman",
                            PhoneNumber = "614-297-9686",
                            PostalCode = "12073-7128"
                        },
                        new
                        {
                            ClientId = 15,
                            Address = "98106 Price Viaduct, West Lonview, Belgium",
                            Email = "Guido_Bartell@yahoo.com",
                            FirstName = "Zita",
                            LastName = "Douglas",
                            PhoneNumber = "400-871-4662",
                            PostalCode = "89858-0981"
                        },
                        new
                        {
                            ClientId = 16,
                            Address = "77524 Goyette Village, Corkeryport, Zimbabwe",
                            Email = "Irma86@hotmail.com",
                            FirstName = "Gwen",
                            LastName = "Hirthe",
                            PhoneNumber = "222-845-8753",
                            PostalCode = "96989"
                        },
                        new
                        {
                            ClientId = 17,
                            Address = "275 Elias Trafficway, Weissnatberg, Burundi",
                            Email = "Carmela_Buckridge13@yahoo.com",
                            FirstName = "Benedict",
                            LastName = "Murazik",
                            PhoneNumber = "967-793-5967",
                            PostalCode = "33559-4711"
                        },
                        new
                        {
                            ClientId = 18,
                            Address = "8330 Rowe Trafficway, Ritchieborough, Falkland Islands (Malvinas)",
                            Email = "Axel.OConner@yahoo.com",
                            FirstName = "Alvis",
                            LastName = "Heathcote",
                            PhoneNumber = "752-845-4566",
                            PostalCode = "19670-6638"
                        },
                        new
                        {
                            ClientId = 19,
                            Address = "767 Rippin Forest, New Stephanie, Malta",
                            Email = "Ericka28@hotmail.com",
                            FirstName = "Garland",
                            LastName = "Lakin",
                            PhoneNumber = "725-867-6149",
                            PostalCode = "12332"
                        },
                        new
                        {
                            ClientId = 20,
                            Address = "403 Adeline Ways, Satterfieldborough, Brazil",
                            Email = "Shanny_Bogan63@yahoo.com",
                            FirstName = "Brielle",
                            LastName = "Champlin",
                            PhoneNumber = "407-504-2171",
                            PostalCode = "90370"
                        },
                        new
                        {
                            ClientId = 21,
                            Address = "42759 Odessa Branch, Clementinestad, Netherlands",
                            Email = "Timmothy.Weimann98@hotmail.com",
                            FirstName = "Alec",
                            LastName = "Moore",
                            PhoneNumber = "228-698-9613",
                            PostalCode = "83292"
                        },
                        new
                        {
                            ClientId = 22,
                            Address = "183 Feest Shoal, South Irving, Bulgaria",
                            Email = "Shakira_Grimes@hotmail.com",
                            FirstName = "Lukas",
                            LastName = "Ebert",
                            PhoneNumber = "408-960-3053",
                            PostalCode = "67223-2854"
                        },
                        new
                        {
                            ClientId = 23,
                            Address = "26520 Bahringer Branch, Port Velva, Cayman Islands",
                            Email = "Julius.Shanahan@hotmail.com",
                            FirstName = "Bruce",
                            LastName = "Lubowitz",
                            PhoneNumber = "342-765-3492",
                            PostalCode = "01532-2687"
                        },
                        new
                        {
                            ClientId = 24,
                            Address = "539 Dickens Alley, Collinsshire, Marshall Islands",
                            Email = "Lavina97@gmail.com",
                            FirstName = "Willow",
                            LastName = "Batz",
                            PhoneNumber = "943-822-4844",
                            PostalCode = "55358"
                        },
                        new
                        {
                            ClientId = 25,
                            Address = "1952 Craig Ridges, North Grant, Switzerland",
                            Email = "Omari33@gmail.com",
                            FirstName = "Felton",
                            LastName = "Huels",
                            PhoneNumber = "545-395-6559",
                            PostalCode = "47424"
                        },
                        new
                        {
                            ClientId = 26,
                            Address = "92603 Ila Shoal, South Everetteburgh, Republic of Korea",
                            Email = "Elenor_OConner@yahoo.com",
                            FirstName = "Laura",
                            LastName = "Zemlak",
                            PhoneNumber = "240-918-3912",
                            PostalCode = "11955"
                        },
                        new
                        {
                            ClientId = 27,
                            Address = "848 Ericka Center, East Dan, Tanzania",
                            Email = "Carlee89@yahoo.com",
                            FirstName = "Emmy",
                            LastName = "Kemmer",
                            PhoneNumber = "246-609-0821",
                            PostalCode = "48615"
                        },
                        new
                        {
                            ClientId = 28,
                            Address = "3221 Wiegand Ville, North Jalen, Moldova",
                            Email = "Bernie38@yahoo.com",
                            FirstName = "Marlee",
                            LastName = "Cartwright",
                            PhoneNumber = "592-231-6486",
                            PostalCode = "48185-6320"
                        },
                        new
                        {
                            ClientId = 29,
                            Address = "851 Hartmann Lodge, Nitzschemouth, Uzbekistan",
                            Email = "Gregg_Roberts80@hotmail.com",
                            FirstName = "Elissa",
                            LastName = "Bailey",
                            PhoneNumber = "904-989-7243",
                            PostalCode = "62256-5831"
                        },
                        new
                        {
                            ClientId = 30,
                            Address = "8688 Thora Stream, New Delfinaville, Somalia",
                            Email = "Pattie46@yahoo.com",
                            FirstName = "Herminia",
                            LastName = "Bednar",
                            PhoneNumber = "555-429-5456",
                            PostalCode = "41060"
                        });
                });

            modelBuilder.Entity("VetClinicServer.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("doctorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastName");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("postalCode");

                    b.Property<int>("Specialization")
                        .HasColumnType("int")
                        .HasColumnName("specialization");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            Address = "62738 Spencer Light, Tyriquemouth, Greece",
                            FirstName = "Jack",
                            LastName = "Becker",
                            PostalCode = "32206",
                            Specialization = 2
                        },
                        new
                        {
                            DoctorId = 2,
                            Address = "04368 Bahringer Plaza, New Virgil, Chad",
                            FirstName = "Autumn",
                            LastName = "Emard",
                            PostalCode = "19162-2900",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 3,
                            Address = "2928 Brionna Mews, South Constantin, Panama",
                            FirstName = "Davin",
                            LastName = "Harber",
                            PostalCode = "76121",
                            Specialization = 1
                        },
                        new
                        {
                            DoctorId = 4,
                            Address = "989 Dooley Lock, Hendersonport, Tajikistan",
                            FirstName = "Rhianna",
                            LastName = "Balistreri",
                            PostalCode = "09027-0178",
                            Specialization = 2
                        },
                        new
                        {
                            DoctorId = 5,
                            Address = "59367 Tillman Lake, West Marlenside, Marshall Islands",
                            FirstName = "Braeden",
                            LastName = "Parisian",
                            PostalCode = "52496-6538",
                            Specialization = 1
                        },
                        new
                        {
                            DoctorId = 6,
                            Address = "27353 Reinger Spur, Spinkastad, Zambia",
                            FirstName = "Obie",
                            LastName = "Berge",
                            PostalCode = "50184",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 7,
                            Address = "087 Stamm Parkway, East Orville, Greece",
                            FirstName = "Roma",
                            LastName = "Mann",
                            PostalCode = "33528",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 8,
                            Address = "5832 Mayer Spring, Ricardoberg, Italy",
                            FirstName = "Osvaldo",
                            LastName = "Ernser",
                            PostalCode = "39783-0777",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 9,
                            Address = "170 Krystal Fort, Justynside, Colombia",
                            FirstName = "Edison",
                            LastName = "Osinski",
                            PostalCode = "55868-0380",
                            Specialization = 1
                        },
                        new
                        {
                            DoctorId = 10,
                            Address = "56771 Brown Camp, Port Mayraberg, Nicaragua",
                            FirstName = "Miracle",
                            LastName = "Weber",
                            PostalCode = "92338-7416",
                            Specialization = 1
                        },
                        new
                        {
                            DoctorId = 11,
                            Address = "88079 Hyatt Forge, Aleenburgh, Lao People's Democratic Republic",
                            FirstName = "Forest",
                            LastName = "McClure",
                            PostalCode = "74988-6989",
                            Specialization = 2
                        },
                        new
                        {
                            DoctorId = 12,
                            Address = "204 Donato Mountain, New Macyberg, Micronesia",
                            FirstName = "Karen",
                            LastName = "Ward",
                            PostalCode = "29795",
                            Specialization = 1
                        },
                        new
                        {
                            DoctorId = 13,
                            Address = "256 Quigley Stravenue, New Rosario, Nauru",
                            FirstName = "Lenora",
                            LastName = "Orn",
                            PostalCode = "45639-7490",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 14,
                            Address = "99349 Breanna Falls, Port Germainehaven, Jordan",
                            FirstName = "Reta",
                            LastName = "Purdy",
                            PostalCode = "53623-9344",
                            Specialization = 2
                        },
                        new
                        {
                            DoctorId = 15,
                            Address = "220 Loyce Dam, South Chris, Saint Helena",
                            FirstName = "Vada",
                            LastName = "Effertz",
                            PostalCode = "81179-8448",
                            Specialization = 2
                        },
                        new
                        {
                            DoctorId = 16,
                            Address = "27506 Horace Freeway, Leuschkeport, Portugal",
                            FirstName = "Edythe",
                            LastName = "Schmidt",
                            PostalCode = "56141-5374",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 17,
                            Address = "961 Dedric Island, New Cristopher, Mauritania",
                            FirstName = "Leone",
                            LastName = "Kautzer",
                            PostalCode = "40189",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 18,
                            Address = "8729 Tiana Branch, Dorthychester, Gibraltar",
                            FirstName = "Susan",
                            LastName = "McLaughlin",
                            PostalCode = "24186",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 19,
                            Address = "83259 Anna River, East Erichview, Falkland Islands (Malvinas)",
                            FirstName = "Landen",
                            LastName = "Thompson",
                            PostalCode = "35454",
                            Specialization = 0
                        },
                        new
                        {
                            DoctorId = 20,
                            Address = "64879 Jenkins Courts, Port Sydnichester, British Indian Ocean Territory (Chagos Archipelago)",
                            FirstName = "Ezra",
                            LastName = "Christiansen",
                            PostalCode = "84998-7991",
                            Specialization = 0
                        });
                });

            modelBuilder.Entity("VetClinicServer.Models.MedicalRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recordId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patientId");

                    b.Property<int?>("RecordTypeId")
                        .HasColumnType("int")
                        .HasColumnName("recordTypeId");

                    b.HasKey("RecordId");

                    b.HasIndex("PatientId");

                    b.HasIndex("RecordTypeId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("VetClinicServer.Models.Medication", b =>
                {
                    b.Property<int>("MedicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("medicationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicationId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("MedicationId");

                    b.ToTable("Medications");

                    b.HasData(
                        new
                        {
                            MedicationId = 1,
                            Description = "A aut quod. Dolorum numquam rerum tempora aut error natus veritatis consequuntur. Blanditiis soluta natus sint voluptatum deserunt quia sunt possimus. Quidem tenetur consequatur molestiae doloribus magni nesciunt eos.",
                            Name = "Tasty Cotton Towels",
                            Price = 46.930642286283271m,
                            Quantity = 63
                        },
                        new
                        {
                            MedicationId = 2,
                            Description = "Beatae impedit in tenetur officia in et labore. Est consequatur molestiae molestiae quasi aut soluta et eius. Consectetur nam quia porro ut placeat voluptate nihil iusto distinctio.",
                            Name = "Awesome Metal Bike",
                            Price = 77.866729690165624m,
                            Quantity = 28
                        },
                        new
                        {
                            MedicationId = 3,
                            Description = "Maxime dolores ipsum nisi quia porro incidunt ut voluptatibus nihil. Et illum repellendus quisquam. Modi repudiandae eaque officiis asperiores laboriosam. Dolor reiciendis asperiores in.",
                            Name = "Practical Granite Bacon",
                            Price = 91.340365564143442m,
                            Quantity = 50
                        },
                        new
                        {
                            MedicationId = 4,
                            Description = "Recusandae minus quae et voluptatibus hic reiciendis deleniti aliquam ipsa. Ex dolorum debitis natus. Labore ut est cupiditate saepe. Non doloribus consequatur numquam qui minus. Odio id fugit reprehenderit eveniet.",
                            Name = "Awesome Frozen Computer",
                            Price = 98.759617595355826m,
                            Quantity = 86
                        },
                        new
                        {
                            MedicationId = 5,
                            Description = "Excepturi dicta neque alias dolorum autem optio itaque animi nemo. Nisi voluptatem doloremque non aut inventore. Assumenda aut et nesciunt vel.",
                            Name = "Practical Rubber Sausages",
                            Price = 7.1203327281960886m,
                            Quantity = 31
                        },
                        new
                        {
                            MedicationId = 6,
                            Description = "Libero est nobis harum vel voluptatem voluptas doloribus maxime voluptas. Quibusdam est dolores nemo est et. Quia sit ea veniam neque veniam est ex ad. Itaque distinctio et libero consequatur cumque quidem qui expedita. Est non eaque et perspiciatis non ea.",
                            Name = "Tasty Metal Chair",
                            Price = 43.74457720515532m,
                            Quantity = 45
                        },
                        new
                        {
                            MedicationId = 7,
                            Description = "Nihil iure ut eum dignissimos in voluptatibus accusantium quae. Ab dicta consectetur omnis et accusantium dolores corrupti fugit qui. Aut qui nostrum quod. Molestiae sed et deserunt. Et earum autem sapiente reiciendis nesciunt aliquam autem quaerat.",
                            Name = "Handcrafted Steel Ball",
                            Price = 62.644241280688066m,
                            Quantity = 54
                        },
                        new
                        {
                            MedicationId = 8,
                            Description = "Culpa sit voluptate amet excepturi ipsum doloribus quidem. Et dolore rerum non voluptatum dolor aut. Illo in qui qui illum qui. Et fugit vero consectetur mollitia rerum perferendis minima veniam.",
                            Name = "Rustic Wooden Chair",
                            Price = 35.169576727398508m,
                            Quantity = 50
                        },
                        new
                        {
                            MedicationId = 9,
                            Description = "Hic nesciunt consequatur minus voluptates laborum. Dolor facere occaecati quo. Laborum ipsam nisi. Similique ut rerum in ipsam quibusdam ipsa est incidunt.",
                            Name = "Intelligent Granite Shirt",
                            Price = 36.471501873094375m,
                            Quantity = 98
                        },
                        new
                        {
                            MedicationId = 10,
                            Description = "Quo et consectetur. Ducimus porro tenetur et. Architecto odio architecto incidunt itaque nam ut voluptatem culpa et. Blanditiis itaque neque sequi sed quisquam quas earum magnam ducimus. Sequi recusandae nam ea est quia aut ipsam.",
                            Name = "Handmade Wooden Soap",
                            Price = 59.106581072838298m,
                            Quantity = 85
                        },
                        new
                        {
                            MedicationId = 11,
                            Description = "Esse nostrum corporis iure error unde voluptatibus laborum deserunt est. Eaque sed qui numquam perferendis autem quas nihil veniam. Similique in aut pariatur. Ut assumenda iure.",
                            Name = "Incredible Cotton Bike",
                            Price = 49.378909216438801m,
                            Quantity = 15
                        },
                        new
                        {
                            MedicationId = 12,
                            Description = "Quidem et aut aut. Quia quasi qui non. Doloribus officia quidem. Itaque hic illum beatae qui nulla quo.",
                            Name = "Unbranded Soft Keyboard",
                            Price = 54.429774210988417m,
                            Quantity = 33
                        },
                        new
                        {
                            MedicationId = 13,
                            Description = "Quis quo et delectus nihil alias. Excepturi dolorum voluptatem aut qui et. Quae voluptas illo cum magni vel sed ut odit porro.",
                            Name = "Sleek Plastic Bike",
                            Price = 46.317922033517551m,
                            Quantity = 34
                        },
                        new
                        {
                            MedicationId = 14,
                            Description = "A aspernatur dolorum ullam explicabo quo voluptatem neque harum. Molestiae voluptas et delectus. Ut quisquam veniam. Rem id vitae voluptate dolore maxime qui non quidem.",
                            Name = "Sleek Plastic Gloves",
                            Price = 50.50643172976864m,
                            Quantity = 97
                        },
                        new
                        {
                            MedicationId = 15,
                            Description = "Quisquam aut eligendi hic. Doloremque sint et dolorum omnis non est facere voluptas aut. Voluptatem omnis necessitatibus eius officiis est quis iste commodi. Iure velit dolores quia labore.",
                            Name = "Ergonomic Concrete Ball",
                            Price = 1.33497959623810858m,
                            Quantity = 7
                        },
                        new
                        {
                            MedicationId = 16,
                            Description = "Pariatur dignissimos dicta qui temporibus. Sed quia est nemo vero quisquam. Quidem quis minima.",
                            Name = "Licensed Plastic Shoes",
                            Price = 3.9930573143032606m,
                            Quantity = 28
                        },
                        new
                        {
                            MedicationId = 17,
                            Description = "Voluptatem commodi et sed qui id itaque quae. Facere est cumque dignissimos magni nostrum ut ut. Labore sed beatae. Esse quasi id optio est. Magnam a necessitatibus maxime ut et assumenda.",
                            Name = "Sleek Wooden Soap",
                            Price = 29.454967390492126m,
                            Quantity = 23
                        },
                        new
                        {
                            MedicationId = 18,
                            Description = "Non ut ea recusandae molestiae. Maiores consequuntur est sed. Architecto natus reiciendis hic molestiae. Ducimus debitis ea autem nobis eos rerum totam facilis ea. Et delectus et. Cumque illum magni dignissimos impedit libero assumenda in.",
                            Name = "Unbranded Cotton Hat",
                            Price = 13.368142653428089m,
                            Quantity = 55
                        },
                        new
                        {
                            MedicationId = 19,
                            Description = "Autem enim vero repellat. Facilis iusto rem non aut esse laudantium veniam temporibus sint. Rerum corrupti fuga autem maxime nulla quas.",
                            Name = "Incredible Soft Shirt",
                            Price = 27.395775912513898m,
                            Quantity = 72
                        },
                        new
                        {
                            MedicationId = 20,
                            Description = "Dicta perspiciatis enim ea similique. Possimus ut nobis beatae ut ut id suscipit exercitationem. Atque temporibus et laborum. Quis est repellendus dolores rerum voluptas eos minus. Nisi culpa et adipisci voluptatem.",
                            Name = "Handcrafted Plastic Pizza",
                            Price = 16.311046623769666m,
                            Quantity = 87
                        },
                        new
                        {
                            MedicationId = 21,
                            Description = "Et unde odit in et dolorem nihil veritatis. Molestias tempora illo dolorum. Est non et dolorum doloremque et labore nihil minus. Perspiciatis velit enim nihil ab id similique molestias. Eaque atque modi cum aspernatur nihil mollitia porro libero. Fugiat ex placeat.",
                            Name = "Refined Concrete Computer",
                            Price = 23.052096284018878m,
                            Quantity = 58
                        },
                        new
                        {
                            MedicationId = 22,
                            Description = "Eos iusto vel. Esse at fugiat vero repellat perferendis officia itaque porro. Qui voluptatem unde pariatur. Sint et ut similique aliquid ut suscipit autem quo. Voluptas quam harum.",
                            Name = "Ergonomic Rubber Chips",
                            Price = 42.26758866909316m,
                            Quantity = 97
                        },
                        new
                        {
                            MedicationId = 23,
                            Description = "Et accusamus quod porro et. Saepe quidem omnis doloribus et unde. Dolorem nobis distinctio ut et accusantium repudiandae vitae inventore. Voluptas tempore deserunt tenetur ut ullam voluptatum reiciendis numquam eos.",
                            Name = "Handmade Rubber Computer",
                            Price = 56.686574927850922m,
                            Quantity = 59
                        },
                        new
                        {
                            MedicationId = 24,
                            Description = "Consequatur cumque et pariatur sit dolor rerum laudantium quis. Corrupti quod beatae dolores dolor amet officiis reiciendis quae. Non molestiae suscipit. Perferendis eligendi voluptate. Id quidem ut quae. Sequi voluptates eum illum qui culpa necessitatibus tenetur quos nobis.",
                            Name = "Small Metal Mouse",
                            Price = 98.735789231832961m,
                            Quantity = 55
                        },
                        new
                        {
                            MedicationId = 25,
                            Description = "Ipsum quo qui at nisi beatae. Dolorem quo quos quis ducimus. Est temporibus odio temporibus et officia autem consequatur qui. Sequi odit aperiam labore autem sunt.",
                            Name = "Gorgeous Wooden Tuna",
                            Price = 55.874044784286046m,
                            Quantity = 78
                        },
                        new
                        {
                            MedicationId = 26,
                            Description = "Et explicabo consequatur eum sit. Nemo sunt occaecati molestias et aperiam facere unde. Numquam illo laborum aut odio voluptatem. Placeat nemo quo sunt architecto veritatis itaque id distinctio harum.",
                            Name = "Licensed Soft Bike",
                            Price = 53.866435488158116m,
                            Quantity = 19
                        },
                        new
                        {
                            MedicationId = 27,
                            Description = "Porro nihil nemo harum animi voluptate quia eaque perspiciatis. Laboriosam quo ipsum eius voluptatem. Repudiandae ut et doloribus ducimus in et voluptatem sint nulla. Pariatur eius aut placeat aut ullam quo nostrum sit perferendis. Ratione ut harum provident provident. Animi saepe quos esse neque animi dolorum ut.",
                            Name = "Awesome Metal Computer",
                            Price = 76.890912566748895m,
                            Quantity = 62
                        },
                        new
                        {
                            MedicationId = 28,
                            Description = "Possimus velit ex illum provident qui ut esse. Molestiae consequatur et natus sed. Ex repudiandae ipsa sint unde accusantium aliquid.",
                            Name = "Incredible Wooden Mouse",
                            Price = 68.936902903922338m,
                            Quantity = 58
                        },
                        new
                        {
                            MedicationId = 29,
                            Description = "Excepturi ratione quo vero rerum reprehenderit quos. Quo alias ratione commodi voluptatum. Corrupti nesciunt cum veritatis. Perferendis velit velit aut.",
                            Name = "Generic Cotton Shirt",
                            Price = 61.058547657941734m,
                            Quantity = 67
                        },
                        new
                        {
                            MedicationId = 30,
                            Description = "Qui dolor maxime aut. Dolor ipsum veritatis et vel odit beatae sed ipsa. Amet unde consectetur sunt non. Voluptas quaerat deleniti quia aspernatur quae ipsum magnam rerum maiores. Est sint vero delectus et mollitia laboriosam impedit.",
                            Name = "Handcrafted Cotton Bacon",
                            Price = 61.818217714698202m,
                            Quantity = 99
                        });
                });

            modelBuilder.Entity("VetClinicServer.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("patientId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("breed");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("clientId");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("species");

                    b.HasKey("PatientId");

                    b.HasIndex("ClientId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Breed = "Beagle",
                            ClientId = 11,
                            DateOfBirth = new DateTime(2017, 5, 30, 21, 3, 55, 536, DateTimeKind.Unspecified).AddTicks(1547),
                            Name = "Weldon",
                            Species = "Cat"
                        },
                        new
                        {
                            PatientId = 2,
                            Breed = "Parrot",
                            ClientId = 29,
                            DateOfBirth = new DateTime(2022, 11, 7, 15, 18, 8, 796, DateTimeKind.Unspecified).AddTicks(8961),
                            Name = "Glen",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 3,
                            Breed = "Cockatiel",
                            ClientId = 20,
                            DateOfBirth = new DateTime(2017, 6, 2, 5, 13, 14, 348, DateTimeKind.Unspecified).AddTicks(9624),
                            Name = "Hyman",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 4,
                            Breed = "Sphynx",
                            ClientId = 30,
                            DateOfBirth = new DateTime(2016, 4, 17, 10, 34, 46, 988, DateTimeKind.Unspecified).AddTicks(406),
                            Name = "Sasha",
                            Species = "Cat"
                        },
                        new
                        {
                            PatientId = 5,
                            Breed = "Syrian",
                            ClientId = 13,
                            DateOfBirth = new DateTime(2017, 6, 16, 5, 24, 52, 909, DateTimeKind.Unspecified).AddTicks(8890),
                            Name = "Hermina",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 6,
                            Breed = "Chinese",
                            ClientId = 13,
                            DateOfBirth = new DateTime(2016, 10, 10, 22, 16, 15, 812, DateTimeKind.Unspecified).AddTicks(5947),
                            Name = "Kenyon",
                            Species = "Dog"
                        },
                        new
                        {
                            PatientId = 7,
                            Breed = "Cockatiel",
                            ClientId = 8,
                            DateOfBirth = new DateTime(2021, 4, 3, 12, 10, 52, 454, DateTimeKind.Unspecified).AddTicks(956),
                            Name = "Chauncey",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 8,
                            Breed = "Parrot",
                            ClientId = 1,
                            DateOfBirth = new DateTime(2016, 6, 26, 2, 57, 37, 930, DateTimeKind.Unspecified).AddTicks(5281),
                            Name = "June",
                            Species = "Dog"
                        },
                        new
                        {
                            PatientId = 9,
                            Breed = "Bengal",
                            ClientId = 8,
                            DateOfBirth = new DateTime(2022, 3, 29, 6, 52, 17, 790, DateTimeKind.Unspecified).AddTicks(8375),
                            Name = "Gustave",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 10,
                            Breed = "Parrot",
                            ClientId = 20,
                            DateOfBirth = new DateTime(2021, 11, 1, 19, 5, 56, 306, DateTimeKind.Unspecified).AddTicks(9574),
                            Name = "Xzavier",
                            Species = "Cat"
                        },
                        new
                        {
                            PatientId = 11,
                            Breed = "Syrian",
                            ClientId = 6,
                            DateOfBirth = new DateTime(2021, 10, 28, 3, 44, 18, 803, DateTimeKind.Unspecified).AddTicks(7702),
                            Name = "Jeffry",
                            Species = "Hamster"
                        },
                        new
                        {
                            PatientId = 12,
                            Breed = "Dutch",
                            ClientId = 8,
                            DateOfBirth = new DateTime(2021, 8, 17, 17, 44, 27, 192, DateTimeKind.Unspecified).AddTicks(1342),
                            Name = "Estell",
                            Species = "Cat"
                        },
                        new
                        {
                            PatientId = 13,
                            Breed = "Dwarf",
                            ClientId = 9,
                            DateOfBirth = new DateTime(2016, 12, 12, 4, 29, 30, 433, DateTimeKind.Unspecified).AddTicks(5214),
                            Name = "Markus",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 14,
                            Breed = "Bengal",
                            ClientId = 15,
                            DateOfBirth = new DateTime(2019, 11, 17, 18, 18, 7, 980, DateTimeKind.Unspecified).AddTicks(5708),
                            Name = "Charlie",
                            Species = "Dog"
                        },
                        new
                        {
                            PatientId = 15,
                            Breed = "Dwarf",
                            ClientId = 10,
                            DateOfBirth = new DateTime(2016, 5, 22, 12, 37, 48, 136, DateTimeKind.Unspecified).AddTicks(4614),
                            Name = "Brennon",
                            Species = "Hamster"
                        },
                        new
                        {
                            PatientId = 16,
                            Breed = "Parrot",
                            ClientId = 5,
                            DateOfBirth = new DateTime(2020, 1, 4, 9, 20, 30, 973, DateTimeKind.Unspecified).AddTicks(7854),
                            Name = "Dexter",
                            Species = "Cat"
                        },
                        new
                        {
                            PatientId = 17,
                            Breed = "Chinese",
                            ClientId = 17,
                            DateOfBirth = new DateTime(2023, 5, 2, 17, 15, 11, 558, DateTimeKind.Unspecified).AddTicks(8880),
                            Name = "Freddie",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 18,
                            Breed = "German Shepherd",
                            ClientId = 26,
                            DateOfBirth = new DateTime(2022, 12, 6, 23, 10, 4, 123, DateTimeKind.Unspecified).AddTicks(8726),
                            Name = "Webster",
                            Species = "Hamster"
                        },
                        new
                        {
                            PatientId = 19,
                            Breed = "Beagle",
                            ClientId = 8,
                            DateOfBirth = new DateTime(2019, 1, 13, 19, 2, 45, 609, DateTimeKind.Unspecified).AddTicks(176),
                            Name = "Elmer",
                            Species = "Bird"
                        },
                        new
                        {
                            PatientId = 20,
                            Breed = "Angora",
                            ClientId = 4,
                            DateOfBirth = new DateTime(2014, 12, 17, 13, 41, 5, 73, DateTimeKind.Unspecified).AddTicks(9854),
                            Name = "Michael",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 21,
                            Breed = "Siamese",
                            ClientId = 26,
                            DateOfBirth = new DateTime(2016, 10, 9, 6, 48, 31, 946, DateTimeKind.Unspecified).AddTicks(4378),
                            Name = "Laila",
                            Species = "Hamster"
                        },
                        new
                        {
                            PatientId = 22,
                            Breed = "Dutch",
                            ClientId = 26,
                            DateOfBirth = new DateTime(2014, 12, 8, 6, 30, 21, 791, DateTimeKind.Unspecified).AddTicks(548),
                            Name = "Naomie",
                            Species = "Dog"
                        },
                        new
                        {
                            PatientId = 23,
                            Breed = "Parrot",
                            ClientId = 19,
                            DateOfBirth = new DateTime(2022, 12, 26, 8, 48, 33, 136, DateTimeKind.Unspecified).AddTicks(1483),
                            Name = "Una",
                            Species = "Hamster"
                        },
                        new
                        {
                            PatientId = 24,
                            Breed = "Finch",
                            ClientId = 13,
                            DateOfBirth = new DateTime(2022, 6, 1, 19, 46, 9, 221, DateTimeKind.Unspecified).AddTicks(9738),
                            Name = "London",
                            Species = "Hamster"
                        },
                        new
                        {
                            PatientId = 25,
                            Breed = "Sphynx",
                            ClientId = 1,
                            DateOfBirth = new DateTime(2018, 6, 7, 19, 5, 45, 417, DateTimeKind.Unspecified).AddTicks(6582),
                            Name = "Aron",
                            Species = "Dog"
                        },
                        new
                        {
                            PatientId = 26,
                            Breed = "Cockatiel",
                            ClientId = 16,
                            DateOfBirth = new DateTime(2018, 11, 21, 4, 16, 28, 521, DateTimeKind.Unspecified).AddTicks(8900),
                            Name = "Mabel",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 27,
                            Breed = "Dutch",
                            ClientId = 7,
                            DateOfBirth = new DateTime(2021, 4, 23, 11, 5, 46, 793, DateTimeKind.Unspecified).AddTicks(3632),
                            Name = "Gage",
                            Species = "Rabbit"
                        },
                        new
                        {
                            PatientId = 28,
                            Breed = "Bengal",
                            ClientId = 17,
                            DateOfBirth = new DateTime(2021, 11, 16, 13, 24, 8, 334, DateTimeKind.Unspecified).AddTicks(4586),
                            Name = "Madilyn",
                            Species = "Cat"
                        },
                        new
                        {
                            PatientId = 29,
                            Breed = "Maine Coon",
                            ClientId = 27,
                            DateOfBirth = new DateTime(2021, 7, 10, 10, 12, 39, 95, DateTimeKind.Unspecified).AddTicks(5846),
                            Name = "Armando",
                            Species = "Dog"
                        },
                        new
                        {
                            PatientId = 30,
                            Breed = "Poodle",
                            ClientId = 13,
                            DateOfBirth = new DateTime(2015, 1, 15, 7, 3, 46, 656, DateTimeKind.Unspecified).AddTicks(2222),
                            Name = "Curtis",
                            Species = "Dog"
                        },
                        new
                        {
                            PatientId = 31,
                            Breed = "Labrador",
                            ClientId = 2,
                            DateOfBirth = new DateTime(2019, 4, 7, 10, 43, 42, 751, DateTimeKind.Unspecified).AddTicks(170),
                            Name = "Keven",
                            Species = "Cat"
                        },
                        new
                        {
                            PatientId = 32,
                            Breed = "Bulldog",
                            ClientId = 5,
                            DateOfBirth = new DateTime(2016, 11, 9, 15, 19, 56, 108, DateTimeKind.Unspecified).AddTicks(6053),
                            Name = "Alvina",
                            Species = "Bird"
                        });
                });

            modelBuilder.Entity("VetClinicServer.Models.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prescriptionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctorId");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patientId");

                    b.HasKey("PrescriptionId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("VetClinicServer.Models.RecordType", b =>
                {
                    b.Property<int>("RecordTypeId")
                        .HasColumnType("int")
                        .HasColumnName("recordTypeId");

                    b.Property<string>("RecordTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("recordTypeName");

                    b.HasKey("RecordTypeId");

                    b.ToTable("RecordTypes");
                });

            modelBuilder.Entity("MedicationPrescription", b =>
                {
                    b.HasOne("VetClinicServer.Models.Medication", null)
                        .WithMany()
                        .HasForeignKey("MedicationsMedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetClinicServer.Models.Prescription", null)
                        .WithMany()
                        .HasForeignKey("PrescriptionsPrescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VetClinicServer.Models.Appointment", b =>
                {
                    b.HasOne("VetClinicServer.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK_Appointments_Doctors");

                    b.HasOne("VetClinicServer.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK_Appointments_Patients");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("VetClinicServer.Models.Bill", b =>
                {
                    b.HasOne("VetClinicServer.Models.Doctor", "Doctor")
                        .WithMany("Bills")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK_Bills_Doctors");

                    b.HasOne("VetClinicServer.Models.Patient", "Patient")
                        .WithMany("Bills")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK_Bills_Patients");

                    b.HasOne("VetClinicServer.Models.BillStatus", "Status")
                        .WithMany("Bills")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Bills_BillStatus");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("VetClinicServer.Models.MedicalRecord", b =>
                {
                    b.HasOne("VetClinicServer.Models.Patient", "Patient")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK_MedicalRecords_Patients");

                    b.HasOne("VetClinicServer.Models.RecordType", "RecordType")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("RecordTypeId")
                        .HasConstraintName("FK_MedicalRecords_RecordTypes1");

                    b.Navigation("Patient");

                    b.Navigation("RecordType");
                });

            modelBuilder.Entity("VetClinicServer.Models.Patient", b =>
                {
                    b.HasOne("VetClinicServer.Models.Client", "Client")
                        .WithMany("Patients")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Patients_Clients");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("VetClinicServer.Models.Prescription", b =>
                {
                    b.HasOne("VetClinicServer.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK_Prescriptions_Doctors");

                    b.HasOne("VetClinicServer.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK_Prescriptions_Patients");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("VetClinicServer.Models.BillStatus", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("VetClinicServer.Models.Client", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("VetClinicServer.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Bills");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("VetClinicServer.Models.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Bills");

                    b.Navigation("MedicalRecords");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("VetClinicServer.Models.RecordType", b =>
                {
                    b.Navigation("MedicalRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
